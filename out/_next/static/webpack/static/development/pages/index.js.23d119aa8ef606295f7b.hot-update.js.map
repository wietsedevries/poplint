{"version":3,"file":"static/webpack/static/development/pages/index.js.23d119aa8ef606295f7b.hot-update.js","sources":["webpack:///./ui/Text.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Header1 = styled.h1`\n  color: ${props => props.theme.color[props.color || 'darkGrey']};\n  font-size: ${props => props.theme.font[props.font || 'jumbo']};\n  padding: 0;\n  margin: 0;\n  font-weight: 500;\n  margin-bottom: ${props => props.margin && props.theme.fn.spacing(4)};\n  text-align: ${props => props.align};\n`;\n\nconst Header2 = styled.h2`\n  color: ${props => props.theme.color[props.color || 'darkGrey']};\n  font-size: ${props => props.theme.font[props.font || 'large']};\n  padding: 0;\n  margin: 0;\n  font-weight: 400;\n  margin-bottom: ${props => props.margin && props.theme.fn.spacing(3)};\n  text-align: ${props => props.align};\n\n  @media (max-width: 768px) {\n    font-size: ${props => props.theme.font[props.font || 'regular']};\n  }\n`;\n\nconst Header3 = styled.h3`\n  color: ${props => props.theme.color[props.color || 'grey']};\n  font-size: ${props => props.theme.font[props.font || 'tiny']};\n  text-transform: uppercase;\n  padding: 0;\n  margin: 0;\n  font-weight: 600;\n  margin-bottom: ${props => props.margin && props.theme.fn.spacing(2)};\n  text-align: ${props => props.align};\n`;\n\nconst Paragraph = styled.p`\n  color: ${props => props.theme.color[props.color || 'darkGrey']};\n  font-size: ${props => props.theme.font[props.font || 'small']};\n  padding: 0;\n  margin: 0 ${props => (props.align === 'center') && 'auto'};\n  font-weight: 400;\n  margin-bottom: ${props => (props.margin ? props.theme.fn.spacing(2) : 0)};\n  text-align: ${props => props.align};\n  max-width: 500px;\n`;\n\nconst Text = ({ type, margin = true, ...props }) => {\n  const map = {\n    h1: Header1,\n    h2: Header2,\n    h3: Header3,\n    p: Paragraph,\n  };\n\n  const Component = map[type || 'p'];\n  return <Component margin={margin} {...props} />;\n};\n\nText.propTypes = {\n  type: PropTypes.string,\n  margin: PropTypes.bool,\n};\n\nexport default Text;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAGA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;;;;A","sourceRoot":""}