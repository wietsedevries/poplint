{"version":3,"file":"static/webpack/static/development/pages/ranking.js.3e49bef0d04a9594b342.hot-update.js","sources":["webpack:///./ui/Badge.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst BadgeWrapper = styled.div`\n  width: 18px;\n  height: 18px;\n  margin: ${props => (props.noMargin ? '0' : `${props.theme.fn.spacing()} 0 0 ${props.theme.fn.spacing()}`)};\n  background-color: ${props => !props.type && props.theme.color.lightGrey};\n  border-radius: ${props => !props.type && '50%'};\n  background-image: url('../static/guides.png');\n  background-size: 400%;\n  background-position-x: ${props => `-${props.position}px`};\n  background-position-y: ${props => (props.active ? '-18px' : 0)};\n  position: relative;\n  opacity: ${props => (props.active ? 1 : 0.6)};\n  transition: opacity .1s;\n\n  &:after {\n    content: ${props => props.label && `\"${props.type}\"`};\n    opacity: ${props => (props.large ? 1 : 0)};\n    transition: .1s;\n    display: block;\n    bottom: ${props => (props.large ? '-20px' : 0)};\n    line-height: 16px;\n    position: absolute;\n    width: 100px;\n    text-align: ${props => !props.large && 'center'};\n    transform: ${props => !props.large && 'translateX(-50%)'};\n    left: ${props => (props.large ? 0 : '50%')};\n    pointer-events: none;\n    height: ${props => !props.large && 0};\n    white-space: nowrap;\n    font-size: ${props => (props.large ? props.theme.font.regular : '10px')};\n    color: ${props => props.theme.color.darkGrey};\n  }\n\n  &:hover {\n    background-position-y: -18px;\n    opacity: 1;\n\n    &:after {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Badge = ({ type, size = 18, ...props }) => {\n  const map = {\n    eslint: { index: 0, url: 'https://github.com/eslint/eslint' },\n    google: { index: 1, url: 'https://github.com/google/styleguide' },\n    standardJs: { index: 2, url: 'https://github.com/standard/standard' },\n    airBnb: { index: 3, url: 'https://github.com/airbnb/javascript' },\n  };\n\n  const redirect = (e) => {\n    e.preventDefault();\n    window.location.href = map[type].url;\n  };\n\n  return (\n    <BadgeWrapper\n      onClick={redirect}\n      position={map[type].index * size}\n      type={type}\n      {...props}\n    />\n  );\n};\n\nBadge.propTypes = {\n  type: PropTypes.string,\n  size: PropTypes.number,\n};\n\nexport default Badge;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AAIA;AAAA;AACA;AAAA;AAGA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAFA;AAKA;;;;A","sourceRoot":""}