{"version":3,"file":"static/webpack/static/development/pages/ranking.js.0beb6255b0b2e8bfefe9.hot-update.js","sources":["webpack:///./ui/Division.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  width: 150px;\n  height: ${props => props.theme.fn.spacing(2)};\n  border-radius: ${props => props.theme.borderRadius};\n  cursor: pointer;\n  display: flex;\n  justify-content: flex-end;\n  background-color: ${props => !!props.nada && props.theme.color.lightGrey};\n`;\n\nconst Unit = styled.div`\n  display: ${props => !props.share && 'none'};\n  width: ${props => `${props.share}%`};\n  background-color: ${props => props.theme.color[props.color]};\n  line-height: ${props => props.theme.fn.spacing(2)};\n  border-radius: ${props => props.theme.borderRadius};\n  margin-left: 3px;\n  font-size: 10px;\n  color: ${props => props.theme.color.darkGrey};\n  box-sizing: border-box;\n  position: relative;\n  border: ${props => !!props.share && '1px solid transparent'};\n\n  &:after {\n    content: ${props => !!props.share && `\"${props.label}\"`};\n    opacity: 0;\n    transition: .1s;\n    display: block;\n    top: -16px;\n    line-height: 16px;\n    position: absolute;\n    width: 100px;\n    text-align: center;\n    transform: translateX(-50%);\n    left: 50%;\n    pointer-events: none;\n    height: 0;\n    white-space: nowrap;\n  }\n\n  &:hover {\n\n    border-color: rgba(0,0,0,0.2);\n    &:after {\n      opacity: 1;\n    }\n\n  }\n  @media (max-width: 768px) {\n    &:after {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Division = ({ error = 0, warn = 0, off = 0 }) => {\n  const reducer = (accumulator, current) => accumulator + current;\n  const total = [error, warn, off].reduce(reducer);\n  const nada = !error && !warn && !off;\n  const units = [\n    { id: 'off', color: 'yellow', share: (off / total) * 100 || 0 },\n    { id: 'warn', color: 'orange', share: (warn / total) * 100 || 0 },\n    { id: 'error', color: 'red', share: (error / total) * 100 || 0 },\n  ];\n\n  return (\n    <Wrapper nada={nada}>\n      {units.map((unit) => {\n        const { id, color, share } = unit;\n        return (\n          <Unit key={id} share={share} color={color} label={`${id}: ${share.toFixed(0)}%`} />\n        );\n      })}\n    </Wrapper>\n  );\n};\n\nDivision.propTypes = {\n  error: PropTypes.number,\n  warn: PropTypes.number,\n  off: PropTypes.number,\n};\n\nexport default Division;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AAIA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AA8BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;;;;A","sourceRoot":""}