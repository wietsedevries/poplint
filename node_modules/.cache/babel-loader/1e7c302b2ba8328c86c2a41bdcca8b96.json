{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Table, Anchor } from '../ui';\n\nvar DataSet = function DataSet(_ref) {\n  var data = _ref.data,\n      src = _ref.src;\n  var tableRef = useRef();\n  var rowRef = useRef();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      overflow = _useState2[0],\n      setOverflow = _useState2[1];\n\n  useEffect(function () {\n    if (tableRef.current.clientWidth < rowRef.current.clientWidth) {\n      setOverflow(true);\n    }\n  }, [data]);\n  var horizontalTable = data.headers[0] === '';\n  return React.createElement(Table, {\n    ref: tableRef,\n    overflow: overflow\n  }, React.createElement(\"table\", null, React.createElement(\"thead\", null, React.createElement(Table.Tr, {\n    ref: rowRef\n  }, data.headers.map(function (header, index) {\n    return React.createElement(Table.Th, {\n      key: index\n    }, header);\n  }))), React.createElement(\"tbody\", null, data.rows.map(function () {\n    var row = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var index = arguments.length > 1 ? arguments[1] : undefined;\n    return React.createElement(Table.Tr, {\n      key: index\n    }, row.map(function (value, i) {\n      return React.createElement(Table.Td, {\n        key: i,\n        horizontal: horizontalTable\n      }, value);\n    }));\n  }))), !!src && React.createElement(Table.Source, null, \"Source: \", React.createElement(Anchor, {\n    href: src,\n    blank: true,\n    colored: true\n  }, src)));\n};\n\nexport default DataSet;","map":null,"metadata":{},"sourceType":"module"}