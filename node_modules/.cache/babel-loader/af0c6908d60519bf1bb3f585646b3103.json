{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport { RulesProvider, useRules } from '../utils/eslintRules';\nimport { Modal, ActiveItem, Paginator } from '../components';\nimport { ListItem, List, Text, Division, Badge } from '../ui';\nimport { Grid, Row, Col } from '../utils/grid';\n\nvar Ranking = function Ranking() {\n  var _useRules = useRules(),\n      rules = _useRules.rules;\n\n  var sortedRules = rules.sort(function (a, b) {\n    return b.error - a.error;\n  });\n\n  var _useState = useState(15),\n      _useState2 = _slicedToArray(_useState, 2),\n      limit = _useState2[0],\n      setLimit = _useState2[1];\n\n  var paginatedRules = sortedRules.slice(0, limit);\n\n  var increaseLimit = function increaseLimit(shouldIncrease) {\n    if (shouldIncrease) {\n      setLimit(limit + 10);\n    }\n  };\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeKey = _useState4[0],\n      setActiveKey = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showModal = _useState6[0],\n      setShowModal = _useState6[1];\n\n  var renderModal = function renderModal() {\n    if (!showModal) {\n      return;\n    }\n\n    var activeItem = rules.find(function (rule) {\n      return rule.key === activeKey;\n    });\n    return React.createElement(Modal, {\n      title: activeKey,\n      content: React.createElement(ActiveItem, {\n        rule: activeItem\n      }),\n      close: function close() {\n        return setShowModal(false);\n      },\n      open: showModal\n    });\n  };\n\n  var toggleKey = function toggleKey(key) {\n    return function () {\n      setActiveKey(key);\n      setShowModal(true);\n    };\n  };\n\n  var renderList = function renderList() {\n    return paginatedRules.map(function (rule, index) {\n      var key = rule.key,\n          error = rule.error,\n          warn = rule.warn,\n          off = rule.off,\n          category = rule.category,\n          eslint = rule.eslint,\n          google = rule.google,\n          standardJs = rule.standardJs,\n          airBnb = rule.airBnb;\n      return React.createElement(ListItem, {\n        key: key,\n        onClick: toggleKey(key)\n      }, React.createElement(ListItem.Head, null, React.createElement(ListItem.Rank, null, index + 1), React.createElement(ListItem.HeadItem, null, React.createElement(Text, {\n        type: \"h2\",\n        color: \"darkGrey\",\n        margin: false\n      }, key), React.createElement(Text, {\n        type: \"h3\",\n        margin: false\n      }, category)), React.createElement(ListItem.HeadItem, {\n        end: true\n      }, React.createElement(Division, {\n        off: off,\n        warn: warn,\n        error: error\n      }), React.createElement(\"span\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'flex-end'\n        }\n      }, _Object$keys({\n        eslint: eslint,\n        google: google,\n        standardJs: standardJs,\n        airBnb: airBnb\n      }).map(function (guideKey, i) {\n        var isPresent = _Object$values({\n          eslint: eslint,\n          google: google,\n          standardJs: standardJs,\n          airBnb: airBnb\n        })[i];\n\n        return isPresent ? React.createElement(Badge, {\n          key: guideKey,\n          type: guideKey,\n          label: true\n        }) : null;\n      })))));\n    });\n  };\n\n  return React.createElement(RulesProvider, null, React.createElement(Grid, null, React.createElement(Row, null, React.createElement(Col, {\n    xs: 12,\n    lg: 6,\n    lgOffset: 3\n  }, React.createElement(Text, {\n    type: \"h1\",\n    align: \"center\"\n  }, \"Popularity ranking of eslint rules\"), React.createElement(Text, {\n    align: \"center\"\n  }, \"\\n              View which rules are used the most and how strict.\\n              \"), React.createElement(List, null, renderList(), React.createElement(Paginator, {\n    loadMore: increaseLimit\n  })))), renderModal()));\n};\n\nexport default Ranking;","map":null,"metadata":{},"sourceType":"module"}