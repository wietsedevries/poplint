{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: \", \" 0 \", \";\\n  text-align: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { useIntersectionObserver } from '../utils/hooks';\nimport { Loader, Button } from '../ui';\nvar PaginatorWrapper = styled.div(_templateObject(), function (props) {\n  return props.theme.fn.spacing(4);\n}, function (props) {\n  return props.theme.fn.spacing(10);\n});\n\nvar Paginator = function Paginator(_ref) {\n  var loadMore = _ref.loadMore,\n      defaultSpin = _ref.spin;\n\n  /**\n   * Check if browser supperts intersection observer\n   * Will no be using a polyfill.\n   */\n  var observerExists = typeof window !== 'undefined' && 'IntersectionObserver' in window && 'IntersectionObserverEntry' in window && 'intersectionRatio' in window.IntersectionObserverEntry.prototype;\n  var paginatorRef = useRef();\n\n  var _useState = useState(defaultSpin),\n      _useState2 = _slicedToArray(_useState, 2),\n      spin = _useState2[0],\n      setSpin = _useState2[1];\n\n  useIntersectionObserver({\n    onIntersect: function onIntersect(_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 1),\n          isIntersecting = _ref3[0].isIntersecting;\n\n      if (isIntersecting) {\n        setSpin(true);\n        loadMore(isIntersecting);\n      } else if (spin) {\n        setSpin(false);\n      }\n    },\n    target: paginatorRef\n  });\n  /**\n   * If intersection observer is not present\n   * allow function to be triggered manually\n   */\n\n  var manualTrigger = function manualTrigger() {\n    loadMore(true);\n  };\n\n  return React.createElement(PaginatorWrapper, {\n    ref: paginatorRef\n  }, observerExists ? React.createElement(Loader, {\n    spin: spin\n  }) : React.createElement(Button, {\n    onClick: manualTrigger\n  }, \"Load more\"));\n};\n\nexport default Paginator;","map":null,"metadata":{},"sourceType":"module"}