{"ast":null,"code":"import { useEffect } from 'react';\nexport var useIntersectionObserver = function useIntersectionObserver(_ref) {\n  var onIntersect = _ref.onIntersect,\n      root = _ref.root,\n      target = _ref.target,\n      _ref$threshold = _ref.threshold,\n      threshold = _ref$threshold === void 0 ? 1.0 : _ref$threshold,\n      _ref$rootMargin = _ref.rootMargin,\n      rootMargin = _ref$rootMargin === void 0 ? '0px' : _ref$rootMargin;\n  useEffect(function () {\n    if (!target) {\n      return;\n    }\n\n    var observer = new IntersectionObserver(onIntersect, {\n      root: root ? root.current : null,\n      rootMargin: rootMargin,\n      threshold: threshold\n    });\n    observer.observe(target.current);\n    return function () {\n      observer.unobserve(target.current);\n    };\n  });\n};","map":null,"metadata":{},"sourceType":"module"}