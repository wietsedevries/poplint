[{"key":"accessor-pairs","eslint":false,"description":"enforce getter and setter pairs in objects","category":"Best Practices","url":"https://eslint.org/docs/rules/accessor-pairs","options":["getWithoutSet","setWithoutGet"]},{"key":"array-bracket-newline","eslint":false,"description":"enforce linebreaks after opening and before closing array brackets","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/array-bracket-newline","fixable":"whitespace","options":["always","never","consistent","multiline","minItems"]},{"key":"array-bracket-spacing","eslint":false,"description":"enforce consistent spacing inside array brackets","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/array-bracket-spacing","fixable":"whitespace","options":["always","never","singleValue","objectsInArrays","arraysInArrays"]},{"key":"array-callback-return","eslint":false,"description":"enforce `return` statements in callbacks of array methods","category":"Best Practices","url":"https://eslint.org/docs/rules/array-callback-return","options":["allowImplicit"]},{"key":"array-element-newline","eslint":false,"description":"enforce line breaks after each array element","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/array-element-newline","fixable":"whitespace","options":["always","never","consistent","multiline","minItems"]},{"key":"arrow-body-style","eslint":false,"description":"require braces around arrow function bodies","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/arrow-body-style","fixable":"code","options":["always","never","as-needed","requireReturnForObjectLiteral"]},{"key":"arrow-parens","eslint":false,"description":"require parentheses around arrow function arguments","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/arrow-parens","fixable":"code","options":["always","as-needed","requireForBlockBody"]},{"key":"arrow-spacing","eslint":false,"description":"enforce consistent spacing before and after the arrow in arrow functions","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/arrow-spacing","fixable":"whitespace","options":["before","after"]},{"key":"block-scoped-var","eslint":false,"description":"enforce the use of variables within the scope they are defined","category":"Best Practices","url":"https://eslint.org/docs/rules/block-scoped-var","options":[]},{"key":"block-spacing","eslint":false,"description":"disallow or enforce spaces inside of blocks after opening block and before closing block","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/block-spacing","fixable":"whitespace","options":["always","never"]},{"key":"brace-style","eslint":false,"description":"enforce consistent brace style for blocks","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/brace-style","fixable":"whitespace","options":["1tbs","stroustrup","allman","allowSingleLine"]},{"key":"callback-return","eslint":false,"description":"require `return` statements after callbacks","category":"Node.js and CommonJS","url":"https://eslint.org/docs/rules/callback-return","options":[]},{"key":"camelcase","eslint":false,"description":"enforce camelcase naming convention","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/camelcase","options":["ignoreDestructuring","properties","allow"]},{"key":"capitalized-comments","eslint":false,"description":"enforce or disallow capitalization of the first letter of a comment","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/capitalized-comments","fixable":"code","options":["always","never","ignorePattern","ignoreInlineComments","ignoreConsecutiveComments","line","block"]},{"key":"class-methods-use-this","eslint":false,"description":"enforce that class methods utilize `this`","category":"Best Practices","url":"https://eslint.org/docs/rules/class-methods-use-this","options":["exceptMethods"]},{"key":"comma-dangle","eslint":false,"description":"require or disallow trailing commas","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/comma-dangle","fixable":"code","options":["always-multiline","always","never","only-multiline","arrays","objects","imports","exports","functions"]},{"key":"comma-spacing","eslint":false,"description":"enforce consistent spacing before and after commas","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/comma-spacing","fixable":"whitespace","options":["before","after"]},{"key":"comma-style","eslint":false,"description":"enforce consistent comma style","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/comma-style","fixable":"code","options":["first","last","exceptions"]},{"key":"complexity","eslint":false,"description":"enforce a maximum cyclomatic complexity allowed in a program","category":"Best Practices","url":"https://eslint.org/docs/rules/complexity","options":["maximum","max"]},{"key":"computed-property-spacing","eslint":false,"description":"enforce consistent spacing inside computed property brackets","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/computed-property-spacing","fixable":"whitespace","options":["always","never"]},{"key":"consistent-return","eslint":false,"description":"require `return` statements to either always or never specify values","category":"Best Practices","url":"https://eslint.org/docs/rules/consistent-return","options":["treatUndefinedAsUnspecified"]},{"key":"consistent-this","eslint":false,"description":"enforce consistent naming when capturing the current execution context","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/consistent-this","options":[]},{"key":"constructor-super","eslint":true,"description":"require `super()` calls in constructors","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/constructor-super","options":[]},{"key":"curly","eslint":false,"description":"enforce consistent brace style for all control statements","category":"Best Practices","url":"https://eslint.org/docs/rules/curly","fixable":"code","options":["all","multi","multi-line","multi-or-nest","consistent"]},{"key":"default-case","eslint":false,"description":"require `default` cases in `switch` statements","category":"Best Practices","url":"https://eslint.org/docs/rules/default-case","options":["commentPattern"]},{"key":"dot-location","eslint":false,"description":"enforce consistent newlines before and after dots","category":"Best Practices","url":"https://eslint.org/docs/rules/dot-location","fixable":"code","options":["object","property"]},{"key":"dot-notation","eslint":false,"description":"enforce dot notation whenever possible","category":"Best Practices","url":"https://eslint.org/docs/rules/dot-notation","fixable":"code","options":["allowKeywords","allowPattern"]},{"key":"eol-last","eslint":false,"description":"require or disallow newline at the end of files","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/eol-last","fixable":"whitespace","options":["always","never","unix","windows"]},{"key":"eqeqeq","eslint":false,"description":"require the use of `===` and `!==`","category":"Best Practices","url":"https://eslint.org/docs/rules/eqeqeq","fixable":"code","options":["always","null","smart","allow-null"]},{"key":"for-direction","eslint":true,"description":"enforce \"for\" loop update clause moving the counter in the right direction.","category":"Possible Errors","url":"https://eslint.org/docs/rules/for-direction","fixable":null,"options":[]},{"key":"func-call-spacing","eslint":false,"description":"require or disallow spacing between function identifiers and their invocations","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/func-call-spacing","fixable":"whitespace","options":["never","always","allowNewlines"]},{"key":"func-name-matching","eslint":false,"description":"require function names to match the name of the variable or property to which they are assigned","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/func-name-matching","options":["always","never","considerPropertyDescriptor","includeCommonJSModuleExports","considerPropertyDescriptor","includeCommonJSModuleExports"]},{"key":"func-names","eslint":false,"description":"require or disallow named `function` expressions","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/func-names","options":["always","as-needed","never","generators"]},{"key":"func-style","eslint":false,"description":"enforce the consistent use of either `function` declarations or expressions","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/func-style","options":["declaration","expression","allowArrowFunctions"]},{"key":"function-paren-newline","eslint":false,"description":"enforce consistent line breaks inside function parentheses","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/function-paren-newline","fixable":"whitespace","options":["always","never","consistent","multiline","minItems"]},{"key":"generator-star-spacing","eslint":false,"description":"enforce consistent spacing around `*` operators in generator functions","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/generator-star-spacing","fixable":"whitespace","options":["before","after","both","neither","named","anonymous","method"]},{"key":"getter-return","eslint":true,"description":"enforce `return` statements in getters","category":"Possible Errors","url":"https://eslint.org/docs/rules/getter-return","fixable":null,"options":["allowImplicit"]},{"key":"global-require","eslint":false,"description":"require `require()` calls to be placed at top-level module scope","category":"Node.js and CommonJS","url":"https://eslint.org/docs/rules/global-require","options":[]},{"key":"guard-for-in","eslint":false,"description":"require `for-in` loops to include an `if` statement","category":"Best Practices","url":"https://eslint.org/docs/rules/guard-for-in","options":[]},{"key":"handle-callback-err","eslint":false,"description":"require error handling in callbacks","category":"Node.js and CommonJS","url":"https://eslint.org/docs/rules/handle-callback-err","options":[]},{"key":"id-blacklist","eslint":false,"description":"disallow specified identifiers","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/id-blacklist","options":[]},{"key":"id-length","eslint":false,"description":"enforce minimum and maximum identifier lengths","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/id-length","options":["min","max","exceptions","properties"]},{"key":"id-match","eslint":false,"description":"require identifiers to match a specified regular expression","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/id-match","options":["properties","onlyDeclarations","ignoreDestructuring"]},{"key":"implicit-arrow-linebreak","eslint":false,"description":"enforce the location of arrow function bodies","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/implicit-arrow-linebreak","fixable":"whitespace","options":["beside","below"]},{"key":"indent","eslint":false,"description":"enforce consistent indentation","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/indent","fixable":"whitespace","options":["tab","SwitchCase","VariableDeclarator","outerIIFEBody","MemberExpression","FunctionDeclaration","FunctionExpression","CallExpression","ArrayExpression","ObjectExpression","ImportDeclaration","flatTernaryExpressions","ignoredNodes","ignoreComments"]},{"key":"indent-legacy","eslint":false,"description":"enforce consistent indentation","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/indent-legacy","fixable":"whitespace","options":["tab","SwitchCase","VariableDeclarator","outerIIFEBody","MemberExpression","FunctionDeclaration","FunctionExpression","CallExpression","ArrayExpression","ObjectExpression"]},{"key":"init-declarations","eslint":false,"description":"require or disallow initialization in variable declarations","category":"Variables","url":"https://eslint.org/docs/rules/init-declarations","options":["always","never","ignoreForLoopInit"]},{"key":"jsx-quotes","eslint":false,"description":"enforce the consistent use of either double or single quotes in JSX attributes","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/jsx-quotes","fixable":"whitespace","options":["prefer-single","prefer-double"]},{"key":"key-spacing","eslint":false,"description":"enforce consistent spacing between keys and values in object literal properties","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/key-spacing","fixable":"whitespace","options":["align","mode","beforeColon","afterColon","singleLine","multiLine"]},{"key":"keyword-spacing","eslint":false,"description":"enforce consistent spacing before and after keywords","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/keyword-spacing","fixable":"whitespace","options":["before","after","overrides"]},{"key":"line-comment-position","eslint":false,"description":"enforce position of line comments","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/line-comment-position","options":["above","beside","position","ignorePattern","applyDefaultPatterns","applyDefaultIgnorePatterns"]},{"key":"linebreak-style","eslint":false,"description":"enforce consistent linebreak style","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/linebreak-style","fixable":"whitespace","options":["unix","windows"]},{"key":"lines-around-comment","eslint":false,"description":"require empty lines around comments","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/lines-around-comment","fixable":"whitespace","options":["beforeBlockComment","afterBlockComment","beforeLineComment","afterLineComment","allowBlockStart","allowBlockEnd","allowClassStart","allowClassEnd","allowObjectStart","allowObjectEnd","allowArrayStart","allowArrayEnd","ignorePattern","applyDefaultIgnorePatterns"]},{"key":"lines-around-directive","eslint":false,"description":"require or disallow newlines around directives","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/lines-around-directive","fixable":"whitespace","options":["always","never","before","after"]},{"key":"lines-between-class-members","eslint":false,"description":"require or disallow an empty line between class members","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/lines-between-class-members","fixable":"whitespace","options":["always","never","exceptAfterSingleLine"]},{"key":"max-classes-per-file","eslint":false,"description":"enforce a maximum number of classes per file","category":"Best Practices","url":"https://eslint.org/docs/rules/max-classes-per-file","options":[]},{"key":"max-depth","eslint":false,"description":"enforce a maximum depth that blocks can be nested","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/max-depth","options":["maximum","max"]},{"key":"max-len","eslint":false,"description":"enforce a maximum line length","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/max-len","options":["code","comments","tabWidth","ignorePattern","ignoreComments","ignoreStrings","ignoreUrls","ignoreTemplateLiterals","ignoreRegExpLiterals","ignoreTrailingComments","code","comments","tabWidth","ignorePattern","ignoreComments","ignoreStrings","ignoreUrls","ignoreTemplateLiterals","ignoreRegExpLiterals","ignoreTrailingComments"]},{"key":"max-lines","eslint":false,"description":"enforce a maximum number of lines per file","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/max-lines","options":["max","skipComments","skipBlankLines"]},{"key":"max-lines-per-function","eslint":false,"description":"enforce a maximum number of line of code in a function","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/max-lines-per-function","options":["max","skipComments","skipBlankLines","IIFEs"]},{"key":"max-nested-callbacks","eslint":false,"description":"enforce a maximum depth that callbacks can be nested","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/max-nested-callbacks","options":["maximum","max"]},{"key":"max-params","eslint":false,"description":"enforce a maximum number of parameters in function definitions","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/max-params","options":["maximum","max"]},{"key":"max-statements","eslint":false,"description":"enforce a maximum number of statements allowed in function blocks","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/max-statements","options":["maximum","max","ignoreTopLevelFunctions"]},{"key":"max-statements-per-line","eslint":false,"description":"enforce a maximum number of statements allowed per line","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/max-statements-per-line","options":["max"]},{"key":"multiline-comment-style","eslint":false,"description":"enforce a particular style for multiline comments","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/multiline-comment-style","fixable":"whitespace","options":["starred-block","separate-lines","bare-block"]},{"key":"multiline-ternary","eslint":false,"description":"enforce newlines between operands of ternary expressions","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/multiline-ternary","options":["always","always-multiline","never"]},{"key":"new-cap","eslint":false,"description":"require constructor names to begin with a capital letter","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/new-cap","options":["newIsCap","capIsNew","newIsCapExceptions","newIsCapExceptionPattern","capIsNewExceptions","capIsNewExceptionPattern","properties"]},{"key":"new-parens","eslint":false,"description":"require parentheses when invoking a constructor with no arguments","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/new-parens","fixable":"code","options":[]},{"key":"newline-after-var","eslint":false,"description":"require or disallow an empty line after variable declarations","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/newline-after-var","fixable":"whitespace","options":["never","always"]},{"key":"newline-before-return","eslint":false,"description":"require an empty line before `return` statements","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/newline-before-return","fixable":"whitespace","options":[]},{"key":"newline-per-chained-call","eslint":false,"description":"require a newline after each call in a method chain","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/newline-per-chained-call","fixable":"whitespace","options":["ignoreChainWithDepth"]},{"key":"no-alert","eslint":false,"description":"disallow the use of `alert`, `confirm`, and `prompt`","category":"Best Practices","url":"https://eslint.org/docs/rules/no-alert","options":[]},{"key":"no-array-constructor","eslint":false,"description":"disallow `Array` constructors","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/no-array-constructor","options":[]},{"key":"no-async-promise-executor","eslint":false,"description":"disallow using an async function as a Promise executor","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-async-promise-executor","fixable":null,"options":[]},{"key":"no-await-in-loop","eslint":false,"description":"disallow `await` inside of loops","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-await-in-loop","options":[]},{"key":"no-bitwise","eslint":false,"description":"disallow bitwise operators","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/no-bitwise","options":["allow","int32Hint"]},{"key":"no-buffer-constructor","eslint":false,"description":"disallow use of the `Buffer()` constructor","category":"Node.js and CommonJS","url":"https://eslint.org/docs/rules/no-buffer-constructor","options":[]},{"key":"no-caller","eslint":false,"description":"disallow the use of `arguments.caller` or `arguments.callee`","category":"Best Practices","url":"https://eslint.org/docs/rules/no-caller","options":[]},{"key":"no-case-declarations","eslint":true,"description":"disallow lexical declarations in case clauses","category":"Best Practices","url":"https://eslint.org/docs/rules/no-case-declarations","options":[]},{"key":"no-catch-shadow","eslint":false,"description":"disallow `catch` clause parameters from shadowing variables in the outer scope","category":"Variables","url":"https://eslint.org/docs/rules/no-catch-shadow","options":[]},{"key":"no-class-assign","eslint":true,"description":"disallow reassigning class members","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/no-class-assign","options":[]},{"key":"no-compare-neg-zero","eslint":true,"description":"disallow comparing against -0","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-compare-neg-zero","fixable":null,"options":[]},{"key":"no-cond-assign","eslint":true,"description":"disallow assignment operators in conditional expressions","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-cond-assign","options":["except-parens","always"]},{"key":"no-confusing-arrow","eslint":false,"description":"disallow arrow functions where they could be confused with comparisons","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/no-confusing-arrow","fixable":"code","options":["allowParens"]},{"key":"no-console","eslint":true,"description":"disallow the use of `console`","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-console","options":["allow"]},{"key":"no-const-assign","eslint":true,"description":"disallow reassigning `const` variables","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/no-const-assign","options":[]},{"key":"no-constant-condition","eslint":true,"description":"disallow constant expressions in conditions","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-constant-condition","options":["checkLoops"]},{"key":"no-continue","eslint":false,"description":"disallow `continue` statements","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/no-continue","options":[]},{"key":"no-control-regex","eslint":true,"description":"disallow control characters in regular expressions","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-control-regex","options":[]},{"key":"no-debugger","eslint":true,"description":"disallow the use of `debugger`","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-debugger","fixable":null,"options":[]},{"key":"no-delete-var","eslint":true,"description":"disallow deleting variables","category":"Variables","url":"https://eslint.org/docs/rules/no-delete-var","options":[]},{"key":"no-div-regex","eslint":false,"description":"disallow division operators explicitly at the beginning of regular expressions","category":"Best Practices","url":"https://eslint.org/docs/rules/no-div-regex","options":[]},{"key":"no-dupe-args","eslint":true,"description":"disallow duplicate arguments in `function` definitions","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-dupe-args","options":[]},{"key":"no-dupe-class-members","eslint":true,"description":"disallow duplicate class members","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/no-dupe-class-members","options":[]},{"key":"no-dupe-keys","eslint":true,"description":"disallow duplicate keys in object literals","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-dupe-keys","options":[]},{"key":"no-duplicate-case","eslint":true,"description":"disallow duplicate case labels","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-duplicate-case","options":[]},{"key":"no-duplicate-imports","eslint":false,"description":"disallow duplicate module imports","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/no-duplicate-imports","options":["includeExports"]},{"key":"no-else-return","eslint":false,"description":"disallow `else` blocks after `return` statements in `if` statements","category":"Best Practices","url":"https://eslint.org/docs/rules/no-else-return","fixable":"code","options":["allowElseIf"]},{"key":"no-empty","eslint":true,"description":"disallow empty block statements","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-empty","options":["allowEmptyCatch"]},{"key":"no-empty-character-class","eslint":true,"description":"disallow empty character classes in regular expressions","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-empty-character-class","options":[]},{"key":"no-empty-function","eslint":false,"description":"disallow empty functions","category":"Best Practices","url":"https://eslint.org/docs/rules/no-empty-function","options":["allow"]},{"key":"no-empty-pattern","eslint":true,"description":"disallow empty destructuring patterns","category":"Best Practices","url":"https://eslint.org/docs/rules/no-empty-pattern","options":[]},{"key":"no-eq-null","eslint":false,"description":"disallow `null` comparisons without type-checking operators","category":"Best Practices","url":"https://eslint.org/docs/rules/no-eq-null","options":[]},{"key":"no-eval","eslint":false,"description":"disallow the use of `eval()`","category":"Best Practices","url":"https://eslint.org/docs/rules/no-eval","options":["allowIndirect"]},{"key":"no-ex-assign","eslint":true,"description":"disallow reassigning exceptions in `catch` clauses","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-ex-assign","options":[]},{"key":"no-extend-native","eslint":false,"description":"disallow extending native types","category":"Best Practices","url":"https://eslint.org/docs/rules/no-extend-native","options":["exceptions"]},{"key":"no-extra-bind","eslint":false,"description":"disallow unnecessary calls to `.bind()`","category":"Best Practices","url":"https://eslint.org/docs/rules/no-extra-bind","fixable":"code","options":[]},{"key":"no-extra-boolean-cast","eslint":true,"description":"disallow unnecessary boolean casts","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-extra-boolean-cast","fixable":"code","options":[]},{"key":"no-extra-label","eslint":false,"description":"disallow unnecessary labels","category":"Best Practices","url":"https://eslint.org/docs/rules/no-extra-label","fixable":"code","options":[]},{"key":"no-extra-parens","eslint":false,"description":"disallow unnecessary parentheses","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-extra-parens","fixable":"code","options":["functions","all","conditionalAssign","nestedBinaryExpressions","returnAssign","ignoreJSX","enforceForArrowConditionals"]},{"key":"no-extra-semi","eslint":true,"description":"disallow unnecessary semicolons","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-extra-semi","fixable":"code","options":[]},{"key":"no-fallthrough","eslint":true,"description":"disallow fallthrough of `case` statements","category":"Best Practices","url":"https://eslint.org/docs/rules/no-fallthrough","options":["commentPattern"]},{"key":"no-floating-decimal","eslint":false,"description":"disallow leading or trailing decimal points in numeric literals","category":"Best Practices","url":"https://eslint.org/docs/rules/no-floating-decimal","fixable":"code","options":[]},{"key":"no-func-assign","eslint":true,"description":"disallow reassigning `function` declarations","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-func-assign","options":[]},{"key":"no-global-assign","eslint":true,"description":"disallow assignments to native objects or read-only global variables","category":"Best Practices","url":"https://eslint.org/docs/rules/no-global-assign","options":["exceptions"]},{"key":"no-implicit-coercion","eslint":false,"description":"disallow shorthand type conversions","category":"Best Practices","url":"https://eslint.org/docs/rules/no-implicit-coercion","fixable":"code","options":["boolean","number","string","allow"]},{"key":"no-implicit-globals","eslint":false,"description":"disallow variable and `function` declarations in the global scope","category":"Best Practices","url":"https://eslint.org/docs/rules/no-implicit-globals","options":[]},{"key":"no-implied-eval","eslint":false,"description":"disallow the use of `eval()`-like methods","category":"Best Practices","url":"https://eslint.org/docs/rules/no-implied-eval","options":[]},{"key":"no-inline-comments","eslint":false,"description":"disallow inline comments after code","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/no-inline-comments","options":[]},{"key":"no-inner-declarations","eslint":true,"description":"disallow variable or `function` declarations in nested blocks","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-inner-declarations","options":["functions","both"]},{"key":"no-invalid-regexp","eslint":true,"description":"disallow invalid regular expression strings in `RegExp` constructors","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-invalid-regexp","options":["allowConstructorFlags"]},{"key":"no-invalid-this","eslint":false,"description":"disallow `this` keywords outside of classes or class-like objects","category":"Best Practices","url":"https://eslint.org/docs/rules/no-invalid-this","options":[]},{"key":"no-irregular-whitespace","eslint":true,"description":"disallow irregular whitespace","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-irregular-whitespace","options":["skipComments","skipStrings","skipTemplates","skipRegExps"]},{"key":"no-iterator","eslint":false,"description":"disallow the use of the `__iterator__` property","category":"Best Practices","url":"https://eslint.org/docs/rules/no-iterator","options":[]},{"key":"no-label-var","eslint":false,"description":"disallow labels that share a name with a variable","category":"Variables","url":"https://eslint.org/docs/rules/no-label-var","options":[]},{"key":"no-labels","eslint":false,"description":"disallow labeled statements","category":"Best Practices","url":"https://eslint.org/docs/rules/no-labels","options":["allowLoop","allowSwitch"]},{"key":"no-lone-blocks","eslint":false,"description":"disallow unnecessary nested blocks","category":"Best Practices","url":"https://eslint.org/docs/rules/no-lone-blocks","options":[]},{"key":"no-lonely-if","eslint":false,"description":"disallow `if` statements as the only statement in `else` blocks","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/no-lonely-if","fixable":"code","options":[]},{"key":"no-loop-func","eslint":false,"description":"disallow `function` declarations and expressions inside loop statements","category":"Best Practices","url":"https://eslint.org/docs/rules/no-loop-func","options":[]},{"key":"no-magic-numbers","eslint":false,"description":"disallow magic numbers","category":"Best Practices","url":"https://eslint.org/docs/rules/no-magic-numbers","options":["detectObjects","enforceConst","ignore","ignoreArrayIndexes"]},{"key":"no-misleading-character-class","eslint":false,"description":"disallow characters which are made with multiple code points in character class syntax","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-misleading-character-class","options":[]},{"key":"no-mixed-operators","eslint":false,"description":"disallow mixed binary operators","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/no-mixed-operators","options":["groups","allowSamePrecedence"]},{"key":"no-mixed-requires","eslint":false,"description":"disallow `require` calls to be mixed with regular variable declarations","category":"Node.js and CommonJS","url":"https://eslint.org/docs/rules/no-mixed-requires","options":["grouping","allowCall"]},{"key":"no-mixed-spaces-and-tabs","eslint":true,"description":"disallow mixed spaces and tabs for indentation","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/no-mixed-spaces-and-tabs","options":["smart-tabs",true,false]},{"key":"no-multi-assign","eslint":false,"description":"disallow use of chained assignment expressions","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/no-multi-assign","options":[]},{"key":"no-multi-spaces","eslint":false,"description":"disallow multiple spaces","category":"Best Practices","url":"https://eslint.org/docs/rules/no-multi-spaces","fixable":"whitespace","options":["exceptions","ignoreEOLComments"]},{"key":"no-multi-str","eslint":false,"description":"disallow multiline strings","category":"Best Practices","url":"https://eslint.org/docs/rules/no-multi-str","options":[]},{"key":"no-multiple-empty-lines","eslint":false,"description":"disallow multiple empty lines","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/no-multiple-empty-lines","fixable":"whitespace","options":["max","maxEOF","maxBOF"]},{"key":"no-native-reassign","eslint":false,"description":"disallow assignments to native objects or read-only global variables","category":"Best Practices","url":"https://eslint.org/docs/rules/no-native-reassign","options":["exceptions"]},{"key":"no-negated-condition","eslint":false,"description":"disallow negated conditions","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/no-negated-condition","options":[]},{"key":"no-negated-in-lhs","eslint":false,"description":"disallow negating the left operand in `in` expressions","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-negated-in-lhs","options":[]},{"key":"no-nested-ternary","eslint":false,"description":"disallow nested ternary expressions","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/no-nested-ternary","options":[]},{"key":"no-new","eslint":false,"description":"disallow `new` operators outside of assignments or comparisons","category":"Best Practices","url":"https://eslint.org/docs/rules/no-new","options":[]},{"key":"no-new-func","eslint":false,"description":"disallow `new` operators with the `Function` object","category":"Best Practices","url":"https://eslint.org/docs/rules/no-new-func","options":[]},{"key":"no-new-object","eslint":false,"description":"disallow `Object` constructors","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/no-new-object","options":[]},{"key":"no-new-require","eslint":false,"description":"disallow `new` operators with calls to `require`","category":"Node.js and CommonJS","url":"https://eslint.org/docs/rules/no-new-require","options":[]},{"key":"no-new-symbol","eslint":true,"description":"disallow `new` operators with the `Symbol` object","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/no-new-symbol","options":[]},{"key":"no-new-wrappers","eslint":false,"description":"disallow `new` operators with the `String`, `Number`, and `Boolean` objects","category":"Best Practices","url":"https://eslint.org/docs/rules/no-new-wrappers","options":[]},{"key":"no-obj-calls","eslint":true,"description":"disallow calling global object properties as functions","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-obj-calls","options":[]},{"key":"no-octal","eslint":true,"description":"disallow octal literals","category":"Best Practices","url":"https://eslint.org/docs/rules/no-octal","options":[]},{"key":"no-octal-escape","eslint":false,"description":"disallow octal escape sequences in string literals","category":"Best Practices","url":"https://eslint.org/docs/rules/no-octal-escape","options":[]},{"key":"no-param-reassign","eslint":false,"description":"disallow reassigning `function` parameters","category":"Best Practices","url":"https://eslint.org/docs/rules/no-param-reassign","options":["props","ignorePropertyModificationsFor"]},{"key":"no-path-concat","eslint":false,"description":"disallow string concatenation with `__dirname` and `__filename`","category":"Node.js and CommonJS","url":"https://eslint.org/docs/rules/no-path-concat","options":[]},{"key":"no-plusplus","eslint":false,"description":"disallow the unary operators `++` and `--`","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/no-plusplus","options":["allowForLoopAfterthoughts"]},{"key":"no-process-env","eslint":false,"description":"disallow the use of `process.env`","category":"Node.js and CommonJS","url":"https://eslint.org/docs/rules/no-process-env","options":[]},{"key":"no-process-exit","eslint":false,"description":"disallow the use of `process.exit()`","category":"Node.js and CommonJS","url":"https://eslint.org/docs/rules/no-process-exit","options":[]},{"key":"no-proto","eslint":false,"description":"disallow the use of the `__proto__` property","category":"Best Practices","url":"https://eslint.org/docs/rules/no-proto","options":[]},{"key":"no-prototype-builtins","eslint":false,"description":"disallow calling some `Object.prototype` methods directly on objects","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-prototype-builtins","options":[]},{"key":"no-redeclare","eslint":true,"description":"disallow variable redeclaration","category":"Best Practices","url":"https://eslint.org/docs/rules/no-redeclare","options":["builtinGlobals"]},{"key":"no-regex-spaces","eslint":true,"description":"disallow multiple spaces in regular expressions","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-regex-spaces","fixable":"code","options":[]},{"key":"no-restricted-globals","eslint":false,"description":"disallow specified global variables","category":"Variables","url":"https://eslint.org/docs/rules/no-restricted-globals","options":[]},{"key":"no-restricted-imports","eslint":false,"description":"disallow specified modules when loaded by `import`","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/no-restricted-imports","options":[]},{"key":"no-restricted-modules","eslint":false,"description":"disallow specified modules when loaded by `require`","category":"Node.js and CommonJS","url":"https://eslint.org/docs/rules/no-restricted-modules","options":[]},{"key":"no-restricted-properties","eslint":false,"description":"disallow certain properties on certain objects","category":"Best Practices","url":"https://eslint.org/docs/rules/no-restricted-properties","options":[]},{"key":"no-restricted-syntax","eslint":false,"description":"disallow specified syntax","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/no-restricted-syntax","options":["selector","message"]},{"key":"no-return-assign","eslint":false,"description":"disallow assignment operators in `return` statements","category":"Best Practices","url":"https://eslint.org/docs/rules/no-return-assign","options":["except-parens","always"]},{"key":"no-return-await","eslint":false,"description":"disallow unnecessary `return await`","category":"Best Practices","url":"https://eslint.org/docs/rules/no-return-await","fixable":null,"options":[]},{"key":"no-script-url","eslint":false,"description":"disallow `javascript:` urls","category":"Best Practices","url":"https://eslint.org/docs/rules/no-script-url","options":[]},{"key":"no-self-assign","eslint":true,"description":"disallow assignments where both sides are exactly the same","category":"Best Practices","url":"https://eslint.org/docs/rules/no-self-assign","options":["props"]},{"key":"no-self-compare","eslint":false,"description":"disallow comparisons where both sides are exactly the same","category":"Best Practices","url":"https://eslint.org/docs/rules/no-self-compare","options":[]},{"key":"no-sequences","eslint":false,"description":"disallow comma operators","category":"Best Practices","url":"https://eslint.org/docs/rules/no-sequences","options":[]},{"key":"no-shadow","eslint":false,"description":"disallow variable declarations from shadowing variables declared in the outer scope","category":"Variables","url":"https://eslint.org/docs/rules/no-shadow","options":["builtinGlobals","hoist","allow"]},{"key":"no-shadow-restricted-names","eslint":false,"description":"disallow identifiers from shadowing restricted names","category":"Variables","url":"https://eslint.org/docs/rules/no-shadow-restricted-names","options":[]},{"key":"no-spaced-func","eslint":false,"description":"disallow spacing between function identifiers and their applications (deprecated)","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/no-spaced-func","fixable":"whitespace","options":[]},{"key":"no-sparse-arrays","eslint":true,"description":"disallow sparse arrays","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-sparse-arrays","options":[]},{"key":"no-sync","eslint":false,"description":"disallow synchronous methods","category":"Node.js and CommonJS","url":"https://eslint.org/docs/rules/no-sync","options":["allowAtRootLevel"]},{"key":"no-tabs","eslint":false,"description":"disallow all tabs","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/no-tabs","options":["allowIndentationTabs"]},{"key":"no-template-curly-in-string","eslint":false,"description":"disallow template literal placeholder syntax in regular strings","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-template-curly-in-string","options":[]},{"key":"no-ternary","eslint":false,"description":"disallow ternary operators","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/no-ternary","options":[]},{"key":"no-this-before-super","eslint":true,"description":"disallow `this`/`super` before calling `super()` in constructors","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/no-this-before-super","options":[]},{"key":"no-throw-literal","eslint":false,"description":"disallow throwing literals as exceptions","category":"Best Practices","url":"https://eslint.org/docs/rules/no-throw-literal","options":[]},{"key":"no-trailing-spaces","eslint":false,"description":"disallow trailing whitespace at the end of lines","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/no-trailing-spaces","fixable":"whitespace","options":["skipBlankLines","ignoreComments"]},{"key":"no-undef","eslint":true,"description":"disallow the use of undeclared variables unless mentioned in `/*global */` comments","category":"Variables","url":"https://eslint.org/docs/rules/no-undef","options":["typeof"]},{"key":"no-undef-init","eslint":false,"description":"disallow initializing variables to `undefined`","category":"Variables","url":"https://eslint.org/docs/rules/no-undef-init","fixable":"code","options":[]},{"key":"no-undefined","eslint":false,"description":"disallow the use of `undefined` as an identifier","category":"Variables","url":"https://eslint.org/docs/rules/no-undefined","options":[]},{"key":"no-underscore-dangle","eslint":false,"description":"disallow dangling underscores in identifiers","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/no-underscore-dangle","options":["allow","allowAfterThis","allowAfterSuper","enforceInMethodNames"]},{"key":"no-unexpected-multiline","eslint":true,"description":"disallow confusing multiline expressions","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-unexpected-multiline","options":[]},{"key":"no-unmodified-loop-condition","eslint":false,"description":"disallow unmodified loop conditions","category":"Best Practices","url":"https://eslint.org/docs/rules/no-unmodified-loop-condition","options":[]},{"key":"no-unneeded-ternary","eslint":false,"description":"disallow ternary operators when simpler alternatives exist","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/no-unneeded-ternary","fixable":"code","options":["defaultAssignment"]},{"key":"no-unreachable","eslint":true,"description":"disallow unreachable code after `return`, `throw`, `continue`, and `break` statements","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-unreachable","options":[]},{"key":"no-unsafe-finally","eslint":true,"description":"disallow control flow statements in `finally` blocks","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-unsafe-finally","options":[]},{"key":"no-unsafe-negation","eslint":true,"description":"disallow negating the left operand of relational operators","category":"Possible Errors","url":"https://eslint.org/docs/rules/no-unsafe-negation","fixable":"code","options":[]},{"key":"no-unused-expressions","eslint":false,"description":"disallow unused expressions","category":"Best Practices","url":"https://eslint.org/docs/rules/no-unused-expressions","options":["allowShortCircuit","allowTernary","allowTaggedTemplates"]},{"key":"no-unused-labels","eslint":true,"description":"disallow unused labels","category":"Best Practices","url":"https://eslint.org/docs/rules/no-unused-labels","fixable":"code","options":[]},{"key":"no-unused-vars","eslint":true,"description":"disallow unused variables","category":"Variables","url":"https://eslint.org/docs/rules/no-unused-vars","options":["all","local","vars","varsIgnorePattern","args","ignoreRestSiblings","argsIgnorePattern","caughtErrors","caughtErrorsIgnorePattern"]},{"key":"no-use-before-define","eslint":false,"description":"disallow the use of variables before they are defined","category":"Variables","url":"https://eslint.org/docs/rules/no-use-before-define","options":["nofunc","functions","classes","variables"]},{"key":"no-useless-call","eslint":false,"description":"disallow unnecessary calls to `.call()` and `.apply()`","category":"Best Practices","url":"https://eslint.org/docs/rules/no-useless-call","options":[]},{"key":"no-useless-catch","eslint":false,"description":"disallow unnecessary `catch` clauses","category":"Best Practices","url":"https://eslint.org/docs/rules/no-useless-catch","options":[]},{"key":"no-useless-computed-key","eslint":false,"description":"disallow unnecessary computed property keys in object literals","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/no-useless-computed-key","fixable":"code","options":[]},{"key":"no-useless-concat","eslint":false,"description":"disallow unnecessary concatenation of literals or template literals","category":"Best Practices","url":"https://eslint.org/docs/rules/no-useless-concat","options":[]},{"key":"no-useless-constructor","eslint":false,"description":"disallow unnecessary constructors","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/no-useless-constructor","options":[]},{"key":"no-useless-escape","eslint":true,"description":"disallow unnecessary escape characters","category":"Best Practices","url":"https://eslint.org/docs/rules/no-useless-escape","options":[]},{"key":"no-useless-rename","eslint":false,"description":"disallow renaming import, export, and destructured assignments to the same name","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/no-useless-rename","fixable":"code","options":["ignoreDestructuring","ignoreImport","ignoreExport"]},{"key":"no-useless-return","eslint":false,"description":"disallow redundant return statements","category":"Best Practices","url":"https://eslint.org/docs/rules/no-useless-return","fixable":"code","options":[]},{"key":"no-var","eslint":false,"description":"require `let` or `const` instead of `var`","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/no-var","fixable":"code","options":[]},{"key":"no-void","eslint":false,"description":"disallow `void` operators","category":"Best Practices","url":"https://eslint.org/docs/rules/no-void","options":[]},{"key":"no-warning-comments","eslint":false,"description":"disallow specified warning terms in comments","category":"Best Practices","url":"https://eslint.org/docs/rules/no-warning-comments","options":["terms","location"]},{"key":"no-whitespace-before-property","eslint":false,"description":"disallow whitespace before properties","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/no-whitespace-before-property","fixable":"whitespace","options":[]},{"key":"no-with","eslint":false,"description":"disallow `with` statements","category":"Best Practices","url":"https://eslint.org/docs/rules/no-with","options":[]},{"key":"nonblock-statement-body-position","eslint":false,"description":"enforce the location of single-line statements","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/nonblock-statement-body-position","fixable":"whitespace","options":["beside","below","any","overrides"]},{"key":"object-curly-newline","eslint":false,"description":"enforce consistent line breaks inside braces","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/object-curly-newline","fixable":"whitespace","options":["always","never","multiline","minProperties","consistent","ObjectExpression","ObjectPattern","ImportDeclaration","ExportDeclaration"]},{"key":"object-curly-spacing","eslint":false,"description":"enforce consistent spacing inside braces","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/object-curly-spacing","fixable":"whitespace","options":["always","never","arraysInObjects","objectsInObjects"]},{"key":"object-property-newline","eslint":false,"description":"enforce placing object properties on separate lines","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/object-property-newline","fixable":"whitespace","options":["allowAllPropertiesOnSameLine","allowMultiplePropertiesPerLine"]},{"key":"object-shorthand","eslint":false,"description":"require or disallow method and property shorthand syntax for object literals","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/object-shorthand","fixable":"code","options":["always","methods","properties","never","consistent","consistent-as-needed","always","methods","properties","avoidQuotes","always","methods","ignoreConstructors","avoidQuotes","avoidExplicitReturnArrows"]},{"key":"one-var","eslint":false,"description":"enforce variables to be declared either together or separately in functions","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/one-var","fixable":"code","options":["always","never","consecutive","separateRequires","var","let","const","initialized","uninitialized"]},{"key":"one-var-declaration-per-line","eslint":false,"description":"require or disallow newlines around variable declarations","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/one-var-declaration-per-line","fixable":"whitespace","options":["always","initializations"]},{"key":"operator-assignment","eslint":false,"description":"require or disallow assignment operator shorthand where possible","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/operator-assignment","fixable":"code","options":["always","never"]},{"key":"operator-linebreak","eslint":false,"description":"enforce consistent linebreak style for operators","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/operator-linebreak","fixable":"code","options":["after","before","none",null,"overrides"]},{"key":"padded-blocks","eslint":false,"description":"require or disallow padding within blocks","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/padded-blocks","fixable":"whitespace","options":["always","never","blocks","switches","classes","allowSingleLineBlocks"]},{"key":"padding-line-between-statements","eslint":false,"description":"require or disallow padding lines between statements","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/padding-line-between-statements","fixable":"whitespace","options":[]},{"key":"prefer-arrow-callback","eslint":false,"description":"require using arrow functions for callbacks","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/prefer-arrow-callback","fixable":"code","options":["allowNamedFunctions","allowUnboundThis"]},{"key":"prefer-const","eslint":false,"description":"require `const` declarations for variables that are never reassigned after declared","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/prefer-const","fixable":"code","options":["destructuring","ignoreReadBeforeAssign"]},{"key":"prefer-destructuring","eslint":false,"description":"require destructuring from arrays and/or objects","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/prefer-destructuring","fixable":"code","options":["VariableDeclarator","AssignmentExpression","array","object","enforceForRenamedProperties"]},{"key":"prefer-named-capture-group","eslint":false,"description":"enforce using named capture group in regular expression","category":"Best Practices","url":"https://eslint.org/docs/rules/prefer-named-capture-group","options":[]},{"key":"prefer-numeric-literals","eslint":false,"description":"disallow `parseInt()` and `Number.parseInt()` in favor of binary, octal, and hexadecimal literals","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/prefer-numeric-literals","fixable":"code","options":[]},{"key":"prefer-object-spread","eslint":false,"description":"disallow using Object.assign with an object literal as the first argument and prefer the use of object spread instead.","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/prefer-object-spread","fixable":"code","options":[]},{"key":"prefer-promise-reject-errors","eslint":false,"description":"require using Error objects as Promise rejection reasons","category":"Best Practices","url":"https://eslint.org/docs/rules/prefer-promise-reject-errors","fixable":null,"options":["allowEmptyReject"]},{"key":"prefer-reflect","eslint":false,"description":"require `Reflect` methods where applicable","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/prefer-reflect","options":["exceptions"]},{"key":"prefer-rest-params","eslint":false,"description":"require rest parameters instead of `arguments`","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/prefer-rest-params","options":[]},{"key":"prefer-spread","eslint":false,"description":"require spread operators instead of `.apply()`","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/prefer-spread","fixable":null,"options":[]},{"key":"prefer-template","eslint":false,"description":"require template literals instead of string concatenation","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/prefer-template","fixable":"code","options":[]},{"key":"quote-props","eslint":false,"description":"require quotes around object literal property names","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/quote-props","fixable":"code","options":["always","as-needed","consistent","consistent-as-needed","always","as-needed","consistent","consistent-as-needed","keywords","unnecessary","numbers"]},{"key":"quotes","eslint":false,"description":"enforce the consistent use of either backticks, double, or single quotes","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/quotes","fixable":"code","options":["single","double","backtick","avoid-escape","avoidEscape","allowTemplateLiterals"]},{"key":"radix","eslint":false,"description":"enforce the consistent use of the radix argument when using `parseInt()`","category":"Best Practices","url":"https://eslint.org/docs/rules/radix","options":["always","as-needed"]},{"key":"require-atomic-updates","eslint":false,"description":"disallow assignments that can lead to race conditions due to usage of `await` or `yield`","category":"Possible Errors","url":"https://eslint.org/docs/rules/require-atomic-updates","fixable":null,"options":[]},{"key":"require-await","eslint":false,"description":"disallow async functions which have no `await` expression","category":"Best Practices","url":"https://eslint.org/docs/rules/require-await","options":[]},{"key":"require-jsdoc","eslint":false,"description":"require JSDoc comments","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/require-jsdoc","options":["require"]},{"key":"require-unicode-regexp","eslint":false,"description":"enforce the use of `u` flag on RegExp","category":"Best Practices","url":"https://eslint.org/docs/rules/require-unicode-regexp","options":[]},{"key":"require-yield","eslint":true,"description":"require generator functions to contain `yield`","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/require-yield","options":[]},{"key":"rest-spread-spacing","eslint":false,"description":"enforce spacing between rest and spread operators and their expressions","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/rest-spread-spacing","fixable":"whitespace","options":["always","never"]},{"key":"semi","eslint":false,"description":"require or disallow semicolons instead of ASI","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/semi","fixable":"code","options":["never","beforeStatementContinuationChars","always","omitLastInOneLineBlock"]},{"key":"semi-spacing","eslint":false,"description":"enforce consistent spacing before and after semicolons","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/semi-spacing","fixable":"whitespace","options":["before","after"]},{"key":"semi-style","eslint":false,"description":"enforce location of semicolons","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/semi-style","fixable":"whitespace","options":["last","first"]},{"key":"sort-imports","eslint":false,"description":"enforce sorted import declarations within modules","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/sort-imports","fixable":"code","options":["ignoreCase","memberSyntaxSortOrder","ignoreDeclarationSort","ignoreMemberSort"]},{"key":"sort-keys","eslint":false,"description":"require object keys to be sorted","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/sort-keys","options":["asc","desc","caseSensitive","natural"]},{"key":"sort-vars","eslint":false,"description":"require variables within the same declaration block to be sorted","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/sort-vars","fixable":"code","options":["ignoreCase"]},{"key":"space-before-blocks","eslint":false,"description":"enforce consistent spacing before blocks","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/space-before-blocks","fixable":"whitespace","options":["always","never","keywords","functions","classes"]},{"key":"space-before-function-paren","eslint":false,"description":"enforce consistent spacing before `function` definition opening parenthesis","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/space-before-function-paren","fixable":"whitespace","options":["always","never","anonymous","named","asyncArrow"]},{"key":"space-in-parens","eslint":false,"description":"enforce consistent spacing inside parentheses","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/space-in-parens","fixable":"whitespace","options":["always","never","exceptions"]},{"key":"space-infix-ops","eslint":false,"description":"require spacing around infix operators","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/space-infix-ops","fixable":"whitespace","options":["int32Hint"]},{"key":"space-unary-ops","eslint":false,"description":"enforce consistent spacing before or after unary operators","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/space-unary-ops","fixable":"whitespace","options":["words","nonwords","overrides"]},{"key":"spaced-comment","eslint":false,"description":"enforce consistent spacing after the `//` or `/*` in a comment","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/spaced-comment","fixable":"whitespace","options":["always","never","exceptions","markers","line","block"]},{"key":"strict","eslint":false,"description":"require or disallow strict mode directives","category":"Strict Mode","url":"https://eslint.org/docs/rules/strict","fixable":"code","options":["never","global","function","safe"]},{"key":"switch-colon-spacing","eslint":false,"description":"enforce spacing around colons of switch statements","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/switch-colon-spacing","fixable":"whitespace","options":["before","after"]},{"key":"symbol-description","eslint":false,"description":"require symbol descriptions","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/symbol-description","fixable":null,"options":[]},{"key":"template-curly-spacing","eslint":false,"description":"require or disallow spacing around embedded expressions of template strings","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/template-curly-spacing","fixable":"whitespace","options":["always","never"]},{"key":"template-tag-spacing","eslint":false,"description":"require or disallow spacing between template tags and their literals","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/template-tag-spacing","fixable":"whitespace","options":["always","never"]},{"key":"unicode-bom","eslint":false,"description":"require or disallow Unicode byte order mark (BOM)","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/unicode-bom","fixable":"whitespace","options":["always","never"]},{"key":"use-isnan","eslint":true,"description":"require calls to `isNaN()` when checking for `NaN`","category":"Possible Errors","url":"https://eslint.org/docs/rules/use-isnan","options":[]},{"key":"valid-jsdoc","eslint":false,"description":"enforce valid JSDoc comments","category":"Possible Errors","url":"https://eslint.org/docs/rules/valid-jsdoc","fixable":"code","options":["prefer","preferType","requireReturn","requireParamDescription","requireReturnDescription","matchDescription","requireReturnType","requireParamType"]},{"key":"valid-typeof","eslint":true,"description":"enforce comparing `typeof` expressions against valid strings","category":"Possible Errors","url":"https://eslint.org/docs/rules/valid-typeof","options":["requireStringLiterals"]},{"key":"vars-on-top","eslint":false,"description":"require `var` declarations be placed at the top of their containing scope","category":"Best Practices","url":"https://eslint.org/docs/rules/vars-on-top","options":[]},{"key":"wrap-iife","eslint":false,"description":"require parentheses around immediate `function` invocations","category":"Best Practices","url":"https://eslint.org/docs/rules/wrap-iife","fixable":"code","options":["outside","inside","any","functionPrototypeMethods"]},{"key":"wrap-regex","eslint":false,"description":"require parenthesis around regex literals","category":"Stylistic Issues","url":"https://eslint.org/docs/rules/wrap-regex","fixable":"code","options":[]},{"key":"yield-star-spacing","eslint":false,"description":"require or disallow spacing around the `*` in `yield*` expressions","category":"ECMAScript 6","url":"https://eslint.org/docs/rules/yield-star-spacing","fixable":"whitespace","options":["before","after","both","neither"]},{"key":"yoda","eslint":false,"description":"require or disallow \"Yoda\" conditions","category":"Best Practices","url":"https://eslint.org/docs/rules/yoda","fixable":"code","options":["always","never","exceptRange","onlyEquality"]}]