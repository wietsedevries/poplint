module.exports = {
  rules: {
    'for-direction': 'error',
    'no-alert': 'error',
    'no-compare-neg-zero': 'error',
    'no-console': 'error',
    'no-constant-condition': [
      'error',
      { checkLoops: false },
    ],
    'no-control-regex': 'error',
    'no-debugger': 'error',
    'no-dupe-args': 'error',
    'no-dupe-keys': 'error',
    'no-duplicate-case': 'error',
    'no-else-return': 'error',
    'no-empty': 'error',
    'no-empty-character-class': 'error',
    'no-extra-boolean-cast': 'error',
    'no-extra-semi': 'error',
    'no-ex-assign': 'error',
    'no-func-assign': 'error',
    'no-invalid-regexp': 'error',
    'no-irregular-whitespace': 'error',
    'no-misleading-character-class': 'error',
    'no-obj-calls': 'error',
    'no-prototype-builtins': 'error',
    'no-regex-spaces': 'error',
    'no-sparse-arrays': 'error',
    'no-template-curly-in-string': 'error',
    'no-unexpected-multiline': 'error',
    'no-unsafe-negation': 'error',
    'use-isnan': 'error',
    'no-unreachable': 'error',
    'valid-typeof': 'error',
    'array-callback-return': 'error',
    'dot-notation': [
      'error',
      { allowKeywords: true },
    ],
    'dot-location': [
      'error',
      'property',
    ],
    'no-caller': 'error',
    'no-case-declarations': 'error',
    'no-empty-function': 'error',
    'no-empty-pattern': 'error',
    'no-eval': 'error',
    'no-extend-native': 'error',
    'no-extra-bind': 'error',
    'no-extra-label': 'error',
    'no-fallthrough': 'error',
    'no-floating-decimal': 'error',
    'no-global-assign': 'error',
    'no-implied-eval': 'error',
    'no-iterator': 'error',
    'no-labels': [
      'error',
      {
        allowLoop: false,
        allowSwitch: false,
      },
    ],
    'no-lone-blocks': 'error',
    'no-loop-func': 'error',
    'no-multi-spaces': [
      'error',
      { ignoreEOLComments: true },
    ],
    'no-multi-str': 'error',
    'no-new': 'error',
    'no-new-func': 'error',
    'no-new-wrappers': 'error',
    'no-octal': 'error',
    'no-octal-escape': 'error',
    'no-proto': 'error',
    'no-redeclare': 'error',
    'no-useless-call': 'error',
    'no-useless-return': 'error',
    'no-script-url': 'error',
    'no-self-assign': 'error',
    'no-self-compare': 'error',
    'no-sequences': 'error',
    'no-throw-literal': 'error',
    'no-unused-expressions': [
      'error',
      {
        allowShortCircuit: true,
        allowTernary: true,
      },
    ],
    'no-unused-labels': 'error',
    'no-useless-catch': 'error',
    'no-useless-concat': 'error',
    'no-useless-escape': 'error',
    'no-void': 'error',
    'no-with': 'error',
    radix: 'error',
    'no-catch-shadow': 'error',
    'no-delete-var': 'error',
    'no-label-var': 'error',
    'no-shadow': 'error',
    'no-shadow-restricted-names': 'error',
    'no-undef': [
      'error',
    ],
    'no-undef-init': 'error',
    'no-unused-vars': [
      'error',
      {
        vars: 'local',
        args: 'after-used',
        ignoreRestSiblings: true,
      },
    ],
    'array-bracket-spacing': [
      'error',
      'never',
    ],
    'block-spacing': [
      'error',
      'always',
    ],
    'brace-style': [
      'error',
      '1tbs',
      { allowSingleLine: true },
    ],
    camelcase: [
      'error',
      { properties: 'never' },
    ],
    'comma-dangle': [
      'error',
      'always-multiline',
    ],
    'comma-spacing': 'error',
    'comma-style': [
      'error',
      'last',
      { exceptions: { VariableDeclaration: true } },
    ],
    'computed-property-spacing': [
      'error',
      'never',
    ],
    'eol-last': [
      'error',
      'always',
    ],
    'func-call-spacing': 'error',
    'indent-legacy': [
      'error',
      2,
      {
        VariableDeclarator: 2,
        SwitchCase: 1,
      },
    ],
    'keyword-spacing': [
      'error',
      {
        before: true,
        after: true,
      },
    ],
    'key-spacing': [
      'error',
      {
        beforeColon: false,
        afterColon: true,
      },
    ],
    'linebreak-style': [
      'error',
      'unix',
    ],
    'max-len': [
      'error',
      120,
      2,
    ],
    'max-nested-callbacks': [
      'error',
      4,
    ],
    'max-statements': [
      'error',
      40,
    ],
    'new-cap': [
      'error',
      {
        newIsCap: true,
        capIsNew: false,
      },
    ],
    'new-parens': 'error',
    'no-lonely-if': 'error',
    'no-mixed-spaces-and-tabs': 'error',
    'no-multiple-empty-lines': [
      'error',
      {
        max: 1,
        maxEOF: 1,
      },
    ],
    'no-tabs': 'error',
    'no-trailing-spaces': 'error',
    'no-unneeded-ternary': [
      'error',
      { defaultAssignment: false },
    ],
    'no-whitespace-before-property': 'error',
    'nonblock-statement-body-position': [
      'error',
      'beside',
    ],
    'object-curly-spacing': [
      'error',
      'always',
    ],
    'one-var-declaration-per-line': [
      'error',
      'initializations',
    ],
    'padded-blocks': [
      'error',
      'never',
    ],
    quotes: [
      'error',
      'single',
      'avoid-escape',
    ],
    'quote-props': [
      'error',
      'as-needed',
      { keywords: false },
    ],
    semi: [
      'error',
      'always',
    ],
    'semi-spacing': 'error',
    'semi-style': [
      'error',
      'last',
    ],
    'space-before-blocks': 'error',
    'space-before-function-paren': [
      'error',
      {
        anonymous: 'always',
        named: 'never',
      },
    ],
    'space-in-parens': 'error',
    'space-infix-ops': 'error',
    'space-unary-ops': 'error',
    'spaced-comment': [
      'error',
      'always',
      {
        line: {
          exceptions: [
            '/',
          ],
        },
        block: {
          exceptions: [
            '*',
          ],
        },
      },
    ],
    'switch-colon-spacing': 'error',
    'unicode-bom': [
      'error',
      'never',
    ],
    'global-require': 'error',
    'no-mixed-requires': [
      'error',
      {
        grouping: true,
        allowCall: false,
      },
    ],
    'no-new-require': 'error',
    'no-path-concat': 'error',
    'import/first': 'error',
    'import/no-amd': 'error',
    'import/no-cycle': [
      'error',
      { commonjs: true },
    ],
    'import/no-unresolved': [
      'error',
      { commonjs: true },
    ],
    'import/no-absolute-path': 'error',
    'import/no-dynamic-require': 'error',
    'import/no-duplicates': 'error',
    'import/no-self-import': 'error',
    'import/no-useless-path-segments': 'error',
    'arrow-parens': [
      'error',
      'as-needed',
    ],
    'arrow-spacing': 'error',
    'implicit-arrow-linebreak': [
      'error',
      'beside',
    ],
    'no-useless-computed-key': 'error',
    'no-useless-constructor': 'error',
    'no-var': 'error',
    'no-useless-rename': 'error',
    'object-shorthand': 'error',
    'prefer-arrow-callback': 'error',
    'prefer-const': [
      'error',
      { destructuring: 'all' },
    ],
    'prefer-destructuring': 'error',
    'prefer-template': 'error',
    'rest-spread-spacing': 'error',
    'template-curly-spacing': [
      'error',
      'always',
    ],
    strict: [
      'error',
      'global',
    ],
    'unicorn/catch-error-name': [
      'error',
      {
        name: 'error',
        caughtErrorsIgnorePattern: '^err',
      },
    ],
    'unicorn/error-message': 'error',
    'unicorn/escape-case': 'error',
    'unicorn/filename-case': [
      'error',
      { case: 'kebabCase' },
    ],
    'unicorn/import-index': 'error',
    'unicorn/no-abusive-eslint-disable': 'error',
    'unicorn/no-console-spaces': 'error',
    'unicorn/no-hex-escape': 'error',
    'unicorn/no-unreadable-array-destructuring': 'error',
    'unicorn/no-unsafe-regex': 'error',
    'unicorn/no-unused-properties': 'error',
    'unicorn/number-literal-case': 'error',
    'unicorn/prefer-exponentiation-operator': 'error',
    'unicorn/regex-shorthand': 'error',
    'optimize-regex/optimize-regex': 'error',
    'sonarjs/no-collapsible-if': 'error',
    'sonarjs/no-duplicated-branches': 'error',
    'sonarjs/no-element-overwrite': 'error',
    'sonarjs/no-extra-arguments': 'error',
    'sonarjs/no-identical-conditions': 'error',
    'sonarjs/no-identical-functions': 'error',
    'sonarjs/no-inverted-boolean-check': 'error',
    'sonarjs/no-one-iteration-loop': 'error',
    'sonarjs/no-redundant-boolean': 'error',
    'sonarjs/no-use-of-empty-return-value': 'error',
    'sonarjs/prefer-immediate-return': 'error',
    'sonarjs/prefer-object-literal': 'error',
    'sonarjs/prefer-single-boolean-return': 'error',
    'sonarjs/prefer-while': 'error',
  },
};
